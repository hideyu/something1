[{"/usr/src/app/src/index.tsx":"1","/usr/src/app/src/reportWebVitals.ts":"2","/usr/src/app/src/App.tsx":"3","/usr/src/app/src/features/something.ts":"4"},{"size":705,"mtime":1607350646596,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1607236820552,"results":"7","hashOfConfig":"6"},{"size":3471,"mtime":1608004518571,"results":"8","hashOfConfig":"6"},{"size":944,"mtime":1608004518576,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"53hlq9",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/usr/src/app/src/index.tsx",[],["20","21"],"/usr/src/app/src/reportWebVitals.ts",[],"/usr/src/app/src/App.tsx",["22"],"import React, {FC, useState, useEffect, SyntheticEvent} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport {somethingSlice, dataType, dataState} from \"./features/something\";\n\nimport axios from \"axios\";\n\nimport './App.css';\n\n\nconst backendUrl: string = 'http://localhost:8000';\naxios.defaults.baseURL = backendUrl;\n\n\nconst App: FC = () => {\n    const dataArray: dataType[] = useSelector<dataState, dataType[]>(state => state.dataArray);\n    const inputData: string = useSelector<dataState, string>(state => state.input);\n    const dispatch = useDispatch();\n\n\n    //****************************\n    // ページ読み込み時にデータを取得する\n    //****************************\n    const fetchData = async () => {\n        const response = await axios.get(\"/api/v1/something/\")\n\n        // setUser(\"hogehogehoge\")\n        // setLoading(false)\n        console.log(response)\n        console.log(response.data)\n        console.log(response.data[0].contents)\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n\n    //*****************************\n    // ボタンを押したらデータを取得する\n    //*****************************\n    const getButton = async () => {\n        const res = await axios.get(\"/api/v1/something/\")\n\n        // console.log([...res.data])\n        dispatch(somethingSlice.actions.get(res.data))\n\n        // setData([...res.data])\n        // setLoading(false)\n        console.log(\"dataArray is ...\")\n        console.log(dataArray)\n        console.log(dataArray[0])\n    }\n\n\n    //******************************\n    // フォームに入力してPOSTする\n    //******************************\n    // フォームの入力値をstateを紐付ける\n    const handleChange = (e: SyntheticEvent<HTMLElement>) => {\n        dispatch(somethingSlice.actions.inputValue((e.target as HTMLInputElement).value))\n    }\n\n    // stateの値（フォームの値と紐付けられてる）をPOSTする\n    const handleSubmit = (e: SyntheticEvent<HTMLElement>) => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\",\n            }\n        }\n\n        const buttonData = {\n            title: \"button-data\",\n            contents: inputData\n        }\n\n        const response = axios.post(\"/api/v1/something/\", buttonData, config)\n            .then(response => console.log(response.data))\n            .catch(error => console.log(error));\n\n        console.log(\"POSTしました\")\n        console.log(response)\n    }\n\n\n    //******************************\n    // レンダーするコンポーネント\n    //******************************\n    return (\n        <div className=\"App\">\n            <p>Do something.</p>\n\n            <h2>GETの練習</h2>\n            <button onClick={() => getButton()}>GET</button>\n\n            {/*<p>{dataArray[0].title}</p>*/}\n            <div>\n                {dataArray.map((data) => (\n                    <p>{data.title}</p>\n                ))}\n            </div>\n\n            <h2>POSTの練習</h2>\n            {/*<button onClick={() => postButton()}>post</button>*/}\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <p>入力中: {inputData}</p>\n                    <input type=\"text\" value={inputData} name=\"name\" onChange={handleChange}/>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n\n        </div>\n    )\n}\n\nexport default App;\n","/usr/src/app/src/features/something.ts",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":20,"nodeType":"29","messageId":"30","endLine":1,"endColumn":28},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]